#!/bin/bash
###########################################################################
# Installation script for Rob's tweaked git settings and streamlined config
# See DASL git wiki for detailed setup and usage instructions for git and the
# DASL server.
# Author: Robert W. Ellenberg
############################################################################

#Initialization of misc vars and flags
MINGW_CHECK=`uname | grep "MINGW"` 

#Some useful functions for this script.
function readData(){
    #Find default full name from the current user's passwd entry, otherwise
    #keep the old entry.
    if [[ $FULLNAME == '' ]]
    then
        FULLNAME=`whatsmyname`
    fi

    if [[ $DASL_USER == '' ]]
    then
        #Choose the default name from the full name, stripped of whitespace and
        #converted to camel case.
        DASL_USER=`echo "$FULLNAME" | sed -e 's/\ //' -e 's/^\(.\)/\L\1/'`
    fi

    if [[ $EMAIL == '' ]]
    then
        #Strip email out of current .gitconfig
        EMAIL=`grep email ~/.gitconfig 2> /dev/null | sed 's/[\t ]/\n/g' | tail -n1`
    fi

    easyread "Please enter your full name" "$FULLNAME";FULLNAME=$REPLY
    easyread "Please enter your email address" "$EMAIL";EMAIL=$REPLY
    easyread "Now your DASL server user name" "$DASL_USER";DASL_USER=$REPLY
    
    if [[ ${#GITHUB_USER} == 0 ]]
    then
        GITHUB_USER=$DASL_USER
    fi
    easyread "Finally, your Github user name" "$DASL_USER";GITHUB_USER=$REPLY

    echo -e "\nFor read-only github URLs, would you like to use"
    read -p "Public Key authentication when attempting to push? [y/N]:" AUTH_METHOD

    echo "------------------------------------------------------------"
    echo "Your information as entered is as follows:"
    echo "Author Name         : $FULLNAME"
    echo "Email               : $EMAIL"
    echo "DASL User name      : $DASL_USER"
    echo "GitHub User name    : $GITHUB_USER"
    if [[ $AUTH_METHOD == 'Y' || $AUTH_METHOD == 'y' ]]
    then
        GITHUB_PUSH_URL="git@github.com:$GITHUB_USER\/"
        GITHUB_GENERIC_PUSH="git@github.com:"
    else
        GITHUB_PUSH_URL="https:\/\/$GITHUB_USER@github.com\/$GITHUB_USER\/"
        GITHUB_GENERIC_PUSH="https:\/\/$GITHUB_USER@github.com\/"
        AUTH_METHOD='N'
    fi
    echo -e "Use SSH Public Key Authentication for Github? $AUTH_METHOD\n" 
    read -p 'Are these correct? [Y/n]' DATAOK
}

function bashrc_source() {

local SOURCED_SEARCH=`grep $1 ~/.bashrc`

if [[ ${#SOURCED_SEARCH} == 0 ]]
then
    cp $1 ~/$1
    echo "source $1" >> ~/.bashrc
fi
}

function easyread() {
if [[ ${#MINGW_CHECK} == 0 ]]
then
    read -e -p "$1:" -i "$2"
else
    read -e -p "$1 [$2]:"
fi
#Copy default value into return field
if [[ $REPLY == '' ]]
then
    REPLY=$2
fi
}

#make sure handy bash functions are available
source .bash_functions
DATAOK='N'

while [[ $DATAOK == 'N' || $DATAOK == 'n' ]]
do
    readData
done

# Backup old git files for user
mv ~/.gitconfig ~/.gitconfig.old
mv ~/.gitignore ~/.gitignore.old
#Super ugly field replacement
#TODO: Store the user data in a table for future use, or be smarter about default values
echo "-------------------------------------------------------------"
echo "Generating .gitconfig file from your information..."
sed -e "s/<FIRST> <LAST>/$FULLNAME/g" -e "s/<EMAIL>/$EMAIL/g" -e "s/<DASL_USER>/$DASL_USER/g" -e "s/<GITHUB_USER>/$GITHUB_USER/g" -e "s/<GITHUB_PUSH_URL>/$GITHUB_PUSH_URL/g" -e "s/<GITHUB_GENERIC_PUSH>/$GITHUB_GENERIC_PUSH/g" .gitconfig_template > ~/.gitconfig

echo "Copying miscellaneous files to your home folder..."
#Copy over important files
cp .gitignore ~/.gitignore
cp .git-completion.bash ~/.git-completion.bash

#copy and source files if they don't exist
echo "Setting up colored bash prompt for git repositories..."

bashrc_source ".bash_functions"

#Avoid sourcing and copying the custom git bash prompt for windows
if [[ ${#MINGW_CHECK} == 0 ]]
then
    bashrc_source ".git-prompt.bash"
fi

echo "Setup complete!"
